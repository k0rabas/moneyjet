"""
Django settings for moneyjet project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f$&^_5jxopx2l82ejzdwh*j0v#i$a&jgtijv_s76)f+$1)9_(z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['moneyjet.pythonanyware.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # third party apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # ... include the providers you want to enable for allauth:
    'allauth.socialaccount.providers.facebook',
    'bootstrap3',       # django-bootstrap3
    'demo',             # django-bootstrap3 demonstration app
    'googlecharts',     # Need django-google-charts, django-qsstats-magic, python-dateutil
    # my apps
    'core',             # monthdelta is needed
]
# INSTALLED_APPS = (
#    ... include the providers you want to enable:
#     'allauth.socialaccount.providers.amazon',
#     'allauth.socialaccount.providers.angellist',
#     'allauth.socialaccount.providers.bitbucket',
#     'allauth.socialaccount.providers.bitbucket_oauth2',
#     'allauth.socialaccount.providers.bitly',
#     'allauth.socialaccount.providers.coinbase',
#     'allauth.socialaccount.providers.dropbox',
#     'allauth.socialaccount.providers.dropbox_oauth2',
#     'allauth.socialaccount.providers.edmodo',
#     'allauth.socialaccount.providers.evernote',
#     'allauth.socialaccount.providers.facebook',
#     'allauth.socialaccount.providers.flickr',
#     'allauth.socialaccount.providers.feedly',
#     'allauth.socialaccount.providers.fxa',
#     'allauth.socialaccount.providers.github',
#     'allauth.socialaccount.providers.gitlab',
#     'allauth.socialaccount.providers.google',
#     'allauth.socialaccount.providers.hubic',
#     'allauth.socialaccount.providers.instagram',
#     'allauth.socialaccount.providers.linkedin',
#     'allauth.socialaccount.providers.linkedin_oauth2',
#     'allauth.socialaccount.providers.odnoklassniki',
#     'allauth.socialaccount.providers.openid',
#     'allauth.socialaccount.providers.persona',
#     'allauth.socialaccount.providers.pinterest',
#     'allauth.socialaccount.providers.reddit',
#     'allauth.socialaccount.providers.soundcloud',
#     'allauth.socialaccount.providers.spotify',
#     'allauth.socialaccount.providers.stackexchange',
#     'allauth.socialaccount.providers.stripe',
#     'allauth.socialaccount.providers.tumblr',
#     'allauth.socialaccount.providers.twitch',
#     'allauth.socialaccount.providers.twitter',
#     'allauth.socialaccount.providers.untappd',
#     'allauth.socialaccount.providers.vimeo',
#     'allauth.socialaccount.providers.vk',
#     'allauth.socialaccount.providers.weibo',
#     'allauth.socialaccount.providers.xing',
# )

SITE_ID = 3     # Required by allauth

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'moneyjet.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # `allauth` needs this from django
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
#                 "allauth.account.context_processors.account",   # check it
#                 "allauth.socialaccount.context_processors.socialaccount",   # check it
            ],
        },
    },
]



WSGI_APPLICATION = 'moneyjet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

# send confirmation email to console, not to the user
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' 

# auth and allauth settings
LOGIN_REDIRECT_URL = '/' 
ACCOUNT_AUTHENTICATION_METHOD = 'email'
# ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_REQUIRED = False

# SOCIALACCOUNT_AUTO_SIGNUP=True
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'SCOPE': ['email',],
        'METHOD': 'js_sdk'  # instead of 'oauth2'
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Kiev'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "static_root")

ADMIN_SITE_HEADER = "moneyjet administration"